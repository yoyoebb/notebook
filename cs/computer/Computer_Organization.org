* 冯洛伊曼结构
+ 计算机应该由运算器(CA)、控制器(CC)、存储器(M)、输入设备(I)、输出设备(O)五部分组成
   在计算机结构中，CPU担任了运算器和控制器，内存担任了存储器
+ 数据和程序均以二进制代码形式不加区别地存放在存储器中，存放位置由存储器的地址(Address)指定
+ 计算机在工作时，能够自动地从存储器中取出指令加以执行

* 一条指定的执行过程
1. 取指(Fetch)
   CPU根据下一条指令地址，向内存发送请求，获取该指令并更新当前指令内容，同时也根据内存反馈，更新下一条指令地址
2. 译码(Decode)
   CPU分析指令内容，解析为需要执行的步骤(数据、通用寄存器、计算)
3. 执行(Execute)
   CPU按分析顺序执行指令各步骤
4. 回写(Write-back)
   将计算结果回写到通用寄存器或内存

* 现代计算机的简化模型
  控制器(CPU) ：
      指令寄存器 IR(Instruction Register)
          存放正在执行或即将执行的指令
      程序计数器 PC(Program Counter)
          存放下一条指令的存储单元地址，具有自动增量记数的功能
      存储器地址寄存器 MAR(Memory Address Register)
      存储器数据寄存器 MDR(Memory Data Register)
      指令译码部件
          对IR中的指令进行译码，以确定指令的具体执行步骤
      控制电路
          产生控制信号，在时序脉冲的同步下控制各个部件的动作
  运算器(CPU) : 用于算术运算和逻辑运算
      ALU   : 算术运算，连接输入寄存器(X、Y)和输出寄存器(Z、F)
      输入输出寄存器：输入寄存器、输出寄存器，其中F用于存放运算结果的状态(0/正负/进位/溢出)
      通用寄存器(R0...R(n-1))
          用于临时存放数据，数据可能来自寄存器，也可能来自其他通用寄存器或ALU的输出
  内部总线(CPU)：负责CPU内部各个部件之间传递数据

  存储器(内存)：
      存储单元(地址、数据)
      控制逻辑: 控制器通过控制总线和其交互，进行读写存储单元操作
      MAR(Memory Address Register)：控制器通过地址总线和其交互，用于存放CPU正在读或写的存储单元的地址
      MDR(Memory Data Register): 控制器通过数据总线和其交互，用于存放CPU正在读出或即将写入的存储单元的数据
  BUS :
      控制总线: 传递读、写、完成等控制信号
      地址总线：决定CPU可以直接寻址的内存大小(2{n})，目前常为32位或64位
      数据总线：带宽一般为存储单元位宽的整数倍

* 模型机如果执行指令
e.g.
指令格式：ADD R0, [6]
指令功能: 通用寄存器R0的内容 + 地址为6的存储单元的内容 = 运算结果并更新回R0

* 模型机添加输入和输出
  外部记录介质(R)：穿孔纸带
  输入设备(I): 读卡器、键盘(Keyboard)
  输出设备(O)：电传打字机、屏幕(Screen)、打印机
  现代部件一般同时具有多种特性：如硬盘(R I O)

主板芯片集成结构演变
  1. 北桥+南桥结构
  2. CPU芯片+北桥+南桥
  3. CPU芯片+南桥
  4. All in one结构
  BIOS芯片：负责开机启动的逻辑。
