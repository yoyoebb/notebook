* Tips
** Tab自动补全
  按1次Tab可以自动补全命令，按两次Tab可以列举所有可能项，节约时间延长寿命必备
** 终止命令
  在系统终端中执行一个命令后想立即停止它，可以同时按下Ctrl + C，这样将立即终止该命令的进程。
** 转后台执行
  有些命令在执行时不断地输出信息，影响到后续命令的输入，则可以在命令末尾添加上一个&符号，让其在系统后台执行。
** 通配符
  '*'  - 匹配0到n个任意字符
  '?'  - 匹配0到1个任意字符
  '[]' - 匹配方括号内的任意指定字符，如[abc]、[0-9]、[a-zA-Z]
** 转义字符
  '\'  - 使下一个特殊字符按正常符号输出。   e.g. echo \$PATH, echo \~
  ' '  - 单引号之间的字符都按正常符号输出。 e.g. echo '$PATH'
  " "  - 双引号之间的变量不进行转义。       e.g. echo "$PATH"
  ` `  - 反引号之间的命令会执行并得到输出。 e.g. echo `uname -a`
** 命令option
  + 命令的option通常会有一个长版本(--)和一个短版本(-)，如:
    ls -a        #便于使用
    ls --all     #便于理解
  + 多个参数：nl -s '. ' -w 10 mysampledata.txt


* 命令的命令
** alias / unalias
  alias [alias=xxx]    设置别名
  alias [alias]        显示别名对应命令，无参数显示所有alias
  unalias alias        删除别名

** type
  type command
  判断命令的类型
  如果显示为"shell builtin"，表示该命令为解释器内部命令

** which
  which command
  根据PATH查找并返回第一个匹配的路径

** whereis
  whereis command
  用来查找二进制（命令）、源文件、man文件。与which不同的是这条命令可以是通过文件索引数据库而非PATH来查找的，所以查找的面比which要广。

* 常用系统工作命令
** echo
  echo [字符串 / $变量]
  在屏幕上输出指定字符串/变量值，变量名区分大小写

** date
  date [option] [+format]
  显示及设置系统的时间或日期
  1. 显示当前系统时间、指定时间
  2. 按指定格式显示时间（年月日时分秒，今天是本年第几天）
  3. 设置新的系统时间

** reboot、poweroff
  reboot / poweroff
  重启服务器 / 关闭服务器，默认只有root用户才有权限执行

** wget
  wget [option] [url]
  在终端中下载网络文件

** ps
  ps [option]
  查看系统中的进程状态
  -a 显示所有进程（包括其他用户的进程）
  -u 用户以及其他详细信息
  -x 显示没有控制终端的进程

  ps使用短参数时，有两种版本，前面加'-'表示UNIX option，不加'-'表示BSD option。
  'ps -aux' 等价于 'ps aux'

** top
  top [option]
  动态地监视进程活动与系统负载等信息

** pidof
  pidof [option] [server_name]
  查询某个指定服务进程的PID值

** kill
  kill [option] [pid]
  终止某个指定PID的服务进程。普通用户只能kill自己的进程，root用户可以kill任何用户的进程。

** killall
  killall [option] [server_name]
  终止某个指定名称的服务所对应的全部进程

* 系统状态检测命令
** ifconfig
  ifconfig [device] [option]
  获取网卡配置与网络状态等信息。使用ifconfig命令来查看本机当前的网卡配置与网络状态等信息时，其实主要查看的就是网卡名称、inet参数后面的IP地址、ether参数后面的网卡物理地址（又称为MAC地址），以及RX、TX的接收数据包与发送数据包的个数及累计流量。

** uname
  uname [option]
  查看系统内核与系统版本等信息,一般会固定搭配上-a参数来完整地查看当前系统的内核名称、主机名、内核发行版本、节点名、系统时间、硬件名称、硬件平台、处理器类型以及操作系统名称等信息。

** 查看当前RHEL版本
  cat /etc/redhat-release

** uptime
  uptime [option]
  查看系统的负载信息，它可以显示当前系统时间、系统已运行时间、启用终端数量以及平均负载值等信息。平均负载值指的是系统在最近1分钟、5分钟、15分钟内的压力情况（下面加粗的信息部分）；负载值越低越好，尽量不要长期超过1，在生产环境中不要超过5。

** free
  free [option]
  显示当前系统中内存的使用量信息，可以结合使用-h参数以更人性化的方式输出当前内存的实时使用量信息。

** who
  who [option]
  查看当前登入主机的用户终端信息

** last
  last [option]
  查看所有系统的登录记录。但是，由于这些信息都是以日志文件"/var/log/wtmp"的形式保存在系统中，因此黑客可以很容易地对内容进行篡改。千万不要单纯以该命令的输出信息而判断系统有无被恶意入侵！

** history
  history [option]
  显示历史执行过的命令(默认最近1000条，如果觉得1000不够用，还可以自定义/etc/profile文件中的HISTSIZE变量值)。历史命令会在会话结束后被保存到 "~/.bash_history"文件
  "history -c"会清空所有的命令历史记录。
  在命令行使用“!编码数字”，可以重复执行某一次的命令。

** sosreport
  收集系统配置及架构信息并输出诊断文档(默认以.tar.xz的形式存放在"/var/tmp/"下)


* 工作目录切换命令
** pwd
  pwd [option]
  显示用户当前所处的工作目录

** cd
  cd [dir]
  切换工作目录，如果dir为空，则切回用户home目录。
  "cd -"     返回上一次的工作目录
  "cd .."    进入父目录
  "cd ~"     进入用户home目录
  "cd ~username"  进入该用户home目录

** ls
  ls [options] [path]
  显示PATH代表的文件or目录信息，如果PATH为空，显示当前目录下的内容
  常用options：
  -a	显示隐藏文件or目录
  -l	列表形式显示信息
  -d	只显示目录本身的信息

* 文本文件编辑命令
** cat
  cat [option] <file1> [file2] …
  合并文件内容并输出到STD_OUT。如果没有指定任何文件，那么会将STD_IN作为输入源(这时通过Ctrl+C可以退出命令)。
  cat非常适合用来查看小文件的内容，但对于大文件，由于cat会一次性输出所有内容并停留在最后一页，很不方便。
  常用options：
  -n	显示行号，包括空行
  -b	显示行号，不包括空行

** more/less
  more [option] <file>
  less [option] <file>
  这对兄弟也可以用于显示文件内容，相比cat，其优点是每输出一页内容后，就会暂停，等待用户指令进行翻页。
  共同点：
	• 按Space往后翻一页，按b往前翻一页，按q或Ctrl+c退出。
	• 都可以从指定行开始浏览(more/less +50 目标文件)
  不同点：
	• less还可以通过PageUp、PageDown进行翻页。
	• less可以显示行号(-N)
	• less支持更多的搜索选项
  所以一般情况下less就完全够用了。
  常用options：
  -N	显示行号，包括空行（less only）
  +[linenum]	从指定行开始浏览
  +/[pattern]	搜索指定字符串，并从首次匹配前两行开始显示

** head/tail
  head [option] file
  tail [option] file
  从头/尾开始显示N行，如果没有指定，则默认显示10行。
  常用options：
  -n [x]   指定显示前/后x行，等价于 -x
  -f       持续刷新文件内容，适合查看log等持续更新的文件 (tail only)

** wc
  wc [option] file
  统计文件中一共有多少行、多少单词、多少字符。（通过option可以指定显示统计项）
  -l    只显示总行数
  -w    质检室单词数
  -c    只显示字符数

** sort
  sort [-option] file
  将文件内容进行排序后输出到STD_OUT

** nl
  nl [option] file
  将文件内容加上行号（nl = number lines）后输出到STD_OUT，带上参数后可以进行更多格式化动作。

** cut
  cut [option] file
  按“列”提取文本字符
  -d?    指定列间隔符，如: -d:
  -f?    指定提取第几列，如: -f1

** stat
  stat [option] file
  查看文件的具体存储信息和时间等信息

** diff
  diff [option] file1 file2
  比较多个文本文件的差异。
  --brief  显示文件是否相同的结论
  -c       详细比较出多个文件的差异之处

* 文件目录管理命令
** touch
  touch [option] file
  如果文件存在，则刷新其访问和修改时间(默认更改为当前时间，可指定更改为特定时间)
  如果文件不存在，则创建一个空文件(很实用的操作)
  -d    同时修改atime与mtime
  -a    仅修改“Access”atime
  -m    仅修改“Modify”mtime

** file
  file [option] file
  查看文件的类型。因为在Linux系统中，文本、目录、设备等所有这些一切都统称为文件，而后缀无法单纯区分文件类型。

** mkdir
  mkdir [option] dir
  创建目录。
  常用options：
  -p   连带创建不存在的父目录
  -v   显示每一步创建动作

** rmdir
  rmdir [option] dir
  删除目录，不带参数只能删除空目录。(删除后无法撤销，敲这命令前千万谨慎！)
  常用options：
  -r	递归删除目录下的文件和子目录。
  -i	删除前提示

** cp
  cp [option] source target
  默认复制文件，但加上-r后可以复制目录。
  1. target为已存在的dir，则将文件复制到该目录
  2. target为已存在的file，则询问是否覆盖
  3. target不存在，则正常复制并重命名为target
  常用options：
  -p    保留原始文件的属性
  -r	递归复制，主要用于复制目录
  -d    如果source为链接文件，则保留该“链接文件”的属性
  -a    相当于-pdr（p、d、r为上述参数）

** mv
  mv [option] source target
  移动文件或目录(不需要-r参数)；也可以修改文件/目录名称。(规则同cp，区别在于不保留source)

** rm
  rm [option] file/dir
  删除文件或目录(-r)，系统会默认向您询问是否要执行删除操作( 删除后无法撤销，敲这命令前千万谨慎！)
  -f    强制删除不询问
  -r    递归删除
  要养成良好的习惯，尽量不要用rm命令，可以用mv命令代替。比如要删掉a.txt，执行mv a.txt /mytemp ，然后用脚本定时清除/mytemp目录，这样会安全很多。

** dd
  dd [option]
  按照指定大小和个数的数据块来复制文件或转换文件。还可以用于将光盘内容提取为iso格式文件
  if    输入文件
  of    输出文件
  count 要复制的块个数
  bs    每个块大小

  e.g.
  dd if=/dev/zero of=test count=1 bs=500M
  dd if=/dev/cdrom of=RHEL-server-7.0-x86_64-LinuxProbe.Com.iso

* 打包压缩与搜索命令
** tar
  压缩 tar [option] tar_file file/dir
  解压 tar [option] tar_file [-C] [dir] [file/dir]
  用于压缩和解压，可以使用Gzip(包后缀'.tar.gz')或bzip2(包后缀'.tar.bz2')
  -c/x/t    指定是压缩(c)，解压(x)，还是查看(t)
  -z/j      指定是Gzip还是bzip2
  -v        显示压缩或解压的过程
  -f        tar_file，-f一般放在参数组最后面
  -p        保留文件的权限和属性，在备份文件时较有用
  -P        保留原文件的绝对路径，即不会拿掉文件路径开始的根目录
  --exclude=file  排除不进行打包的文件

  e.g.
  tar -tf xxx.tar.gz          查看压缩包内容
  tar -czvf xxx.tar.gz /root  将/root目录按Gzip压缩为xxx.tar.gz
  tar -xzvf xxx.tar.gz -C /   将xxx.tar.gz在"/"根目录下解压缩
  tar -xzvf xxx.tar.gz xxx1   将xxx.tar.gz中的xxx1单独解压缩

** grep
  grep [option] key file
  在文本中执行关键词搜索，并显示匹配的结果
  -n    显示行号
  -v    反向选择-仅列出没有关键字的行

  e.g.
  grep /sbin/nologin /etc/passwd

** find
  find [查找路径] 寻找条件 操作
  按照指定条件来查找文件，并可进行进一步处理。
  查找条件包括：
  -name     按名称查找
  -perm     按权限查找
  -user     按所有者查找
  -group    按所在组查找
  -nouser   查找无所有者的文件
  -nogroup  查找无所在组的文件
  -size     按文件大小查找（+50KB为查找超过50KB的文件，而-50KB为查找小于50KB的文件）
  -prune    忽略某个目录
  进一步处理
  -exec …… {}\


* 重定向输入输出
  标准输入（STDIN，文件描述符为0）：默认从键盘输入，也可从其他文件或命令中输入。
  标准输出（STDOUT，文件描述符为1）：默认输出到屏幕。
  错误输出（STDERR，文件描述符为2）：默认输出到屏幕。
** 标准输入重定向
  + command < file
    将file作为command的标准输入。
    e.g.  wc -l < test
  + command << flag
    从标准输入中读入，直到遇见分界符才停止。
    e.g.  wc -l << over
  + command < file1 > file2
    将file1作为command的标准输入，file2作为command的标准输出
** 标准输出重定向(更常见)
  + 清空模式
    - command > file    将file作为command的标准输出
    - command 2> file   将file作为command的错误输出
    - command &> file   BOTH
  + 追加模式
    -  command >> file  将file作为command的标准输出
    - command 2>> file  将file作为command的错误输出
    - command &>> file  BOTH


* Pipe
  格式： command A | command B | ...
  将A命令的输出作为B命令的输入
  e.g.
  grep "/sbin/nologin" /etc/passwd | wc -l
  ls -l /etc/ | more
  echo "linuxprobe" | passwd --stdin root

